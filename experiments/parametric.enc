#! ../release/encorec -c -run

passive class Node<foo>
  element : foo
  next : Node<foo>
  def init(element : foo, next : Node<foo>) : void{
    this.element = element;
    this.next = next;
  }

class List<bar>
  head : Node<bar>
  
  def init() : void{
    this.head = null
  }

  def add(x : bar) : void{
    this.head = new Node<bar>(x, this.head)
  }

--  def head() : bar{
--    this.head.element
--  }

class Cell<a>
  val : a
  def init(val : a) : void
    this.val = val
  def getVal() : a
    this.val
  def id(x : b) : b
    x

passive class Pair<a, b>
  fst : a
  snd : b
  def init(fst : a, snd : b) : void{
    this.fst = fst;
    this.snd = snd
  }

class Main
  def main() : void{
    let l = new List<int>() 
        c1 = new Cell<int>(42)
        c2 = new Cell<string>("fortytwo")
        p = new Pair(42, "fortytwo")
        c3 = new Cell<Pair<int, string>>(p)
    in {
      l.add(3);
      l.add(2);
      l.add(1);
--      print c1.val;
--      print get c1.getVal();
--      print c2.val;
--      print get c2.getVal();
      print ((get c3.getVal()).fst);
      print ((get c3.getVal()).snd);
    };
    print "Done"
  }